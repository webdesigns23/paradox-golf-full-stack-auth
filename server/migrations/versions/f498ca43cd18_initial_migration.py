"""initial migration

Revision ID: f498ca43cd18
Revises: 
Create Date: 2025-08-30 15:00:43.689175

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f498ca43cd18'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_course_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('par_total', sa.Integer(), nullable=True),
    sa.Column('total_yards', sa.Integer(), nullable=True),
    sa.Column('holes', sa.Integer(), nullable=True),
    sa.Column('course_rating', sa.Float(), nullable=True),
    sa.Column('slope_rating', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_courses'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('_password_hash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('username')
    )
    op.create_table('challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('target_number', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_challenges_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_challenges'))
    )
    op.create_table('course_holes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_hole_number', sa.Integer(), nullable=False),
    sa.Column('par', sa.Integer(), nullable=False),
    sa.Column('yardage', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_course_holes_course_id_courses'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course_holes'))
    )
    op.create_table('rounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('tee_box', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_rounds_course_id_courses')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_rounds_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rounds'))
    )
    op.create_table('round_holes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hole_number', sa.Integer(), nullable=True),
    sa.Column('start_distance', sa.Integer(), nullable=True),
    sa.Column('surface', sa.String(), nullable=True),
    sa.Column('penalty', sa.Integer(), nullable=True),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('course_hole_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_hole_id'], ['course_holes.id'], name=op.f('fk_round_holes_course_hole_id_course_holes')),
    sa.ForeignKeyConstraint(['round_id'], ['rounds.id'], name=op.f('fk_round_holes_round_id_rounds'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_round_holes'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('round_holes')
    op.drop_table('rounds')
    op.drop_table('course_holes')
    op.drop_table('challenges')
    op.drop_table('users')
    op.drop_table('courses')
    # ### end Alembic commands ###
